//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VEGETFOODS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VEGETFOODSEntities : DbContext
    {
        public VEGETFOODSEntities()
            : base("name=VEGETFOODSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CART_ITEM> CART_ITEM { get; set; }
        public virtual DbSet<CATEGORY> CATEGORies { get; set; }
        public virtual DbSet<CONSIGNMENT> CONSIGNMENTs { get; set; }
        public virtual DbSet<DISCOUNT> DISCOUNTs { get; set; }
        public virtual DbSet<DISTRICT> DISTRICTS { get; set; }
        public virtual DbSet<NEWS> NEWS { get; set; }
        public virtual DbSet<NEWSCATEGORY> NEWSCATEGORies { get; set; }
        public virtual DbSet<NEWSCOMMENT> NEWSCOMMENTs { get; set; }
        public virtual DbSet<ORDER> ORDERs { get; set; }
        public virtual DbSet<ORDER_DETAIL> ORDER_DETAIL { get; set; }
        public virtual DbSet<PRODUCT> PRODUCTs { get; set; }
        public virtual DbSet<PROVINCE> PROVINCEs { get; set; }
        public virtual DbSet<SHOPPING_SESSION> SHOPPING_SESSION { get; set; }
        public virtual DbSet<SYS_ACCESS> SYS_ACCESS { get; set; }
        public virtual DbSet<SYS_GROUP> SYS_GROUP { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TOWN> TOWNs { get; set; }
        public virtual DbSet<USER> USERs { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_CATEGORY_CREATE(Nullable<int> categoryParentID, string categoryName, string categoryDesc, Nullable<byte> isActive, string createBy)
        {
            var categoryParentIDParameter = categoryParentID.HasValue ?
                new ObjectParameter("categoryParentID", categoryParentID) :
                new ObjectParameter("categoryParentID", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("categoryDesc", categoryDesc) :
                new ObjectParameter("categoryDesc", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATEGORY_CREATE", categoryParentIDParameter, categoryNameParameter, categoryDescParameter, isActiveParameter, createByParameter);
        }
    
        public virtual int SP_CATEGORY_DELETE(Nullable<int> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATEGORY_DELETE", categoryIDParameter);
        }
    
        public virtual ObjectResult<SP_CATEGORY_GETALL_Result> SP_CATEGORY_GETALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATEGORY_GETALL_Result>("SP_CATEGORY_GETALL");
        }
    
        public virtual ObjectResult<SP_CATEGORY_GETBYID_Result> SP_CATEGORY_GETBYID(Nullable<int> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATEGORY_GETBYID_Result>("SP_CATEGORY_GETBYID", categoryIDParameter);
        }
    
        public virtual ObjectResult<SP_CATEGORY_SEARCH_Result> SP_CATEGORY_SEARCH(string txtSearch, Nullable<int> startIndex, Nullable<int> count, ObjectParameter totalItems)
        {
            var txtSearchParameter = txtSearch != null ?
                new ObjectParameter("txtSearch", txtSearch) :
                new ObjectParameter("txtSearch", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("startIndex", startIndex) :
                new ObjectParameter("startIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATEGORY_SEARCH_Result>("SP_CATEGORY_SEARCH", txtSearchParameter, startIndexParameter, countParameter, totalItems);
        }
    
        public virtual int SP_CATEGORY_UPDATE(Nullable<int> categoryID, Nullable<int> categoryParentID, string categoryName, string categoryDesc, Nullable<byte> isActive)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var categoryParentIDParameter = categoryParentID.HasValue ?
                new ObjectParameter("categoryParentID", categoryParentID) :
                new ObjectParameter("categoryParentID", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("categoryDesc", categoryDesc) :
                new ObjectParameter("categoryDesc", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATEGORY_UPDATE", categoryIDParameter, categoryParentIDParameter, categoryNameParameter, categoryDescParameter, isActiveParameter);
        }
    
        public virtual int SP_CONSIGNMENT_CREATE(string bathNo, Nullable<int> consProductID, Nullable<double> consProductAmout, Nullable<byte> isActive, Nullable<System.DateTime> productEXP)
        {
            var bathNoParameter = bathNo != null ?
                new ObjectParameter("bathNo", bathNo) :
                new ObjectParameter("bathNo", typeof(string));
    
            var consProductIDParameter = consProductID.HasValue ?
                new ObjectParameter("consProductID", consProductID) :
                new ObjectParameter("consProductID", typeof(int));
    
            var consProductAmoutParameter = consProductAmout.HasValue ?
                new ObjectParameter("consProductAmout", consProductAmout) :
                new ObjectParameter("consProductAmout", typeof(double));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(byte));
    
            var productEXPParameter = productEXP.HasValue ?
                new ObjectParameter("productEXP", productEXP) :
                new ObjectParameter("productEXP", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CONSIGNMENT_CREATE", bathNoParameter, consProductIDParameter, consProductAmoutParameter, isActiveParameter, productEXPParameter);
        }
    
        public virtual ObjectResult<SP_CONSIGNMENT_GETBYID_Result> SP_CONSIGNMENT_GETBYID(string batchNo)
        {
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("batchNo", batchNo) :
                new ObjectParameter("batchNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CONSIGNMENT_GETBYID_Result>("SP_CONSIGNMENT_GETBYID", batchNoParameter);
        }
    
        public virtual ObjectResult<SP_CONSIGNMENT_GETBYPRODUCTID_Result> SP_CONSIGNMENT_GETBYPRODUCTID(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CONSIGNMENT_GETBYPRODUCTID_Result>("SP_CONSIGNMENT_GETBYPRODUCTID", productIDParameter);
        }
    
        public virtual int SP_CONSIGNMENT_UPDATE(string bathNo, Nullable<double> consProductAmout, Nullable<byte> isActive, Nullable<System.DateTime> productEXP)
        {
            var bathNoParameter = bathNo != null ?
                new ObjectParameter("bathNo", bathNo) :
                new ObjectParameter("bathNo", typeof(string));
    
            var consProductAmoutParameter = consProductAmout.HasValue ?
                new ObjectParameter("consProductAmout", consProductAmout) :
                new ObjectParameter("consProductAmout", typeof(double));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(byte));
    
            var productEXPParameter = productEXP.HasValue ?
                new ObjectParameter("productEXP", productEXP) :
                new ObjectParameter("productEXP", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CONSIGNMENT_UPDATE", bathNoParameter, consProductAmoutParameter, isActiveParameter, productEXPParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_EMAIL_IS_EXISTED(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_EMAIL_IS_EXISTED", emailParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_LOGIN(string usercode, string password)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_LOGIN", usercodeParameter, passwordParameter);
        }
    
        public virtual int SP_PRODUCT_CREATE(string productCode, string productName, string productShortName, Nullable<int> productCategoryId, string productImages, string productShortDesc, string productLongDesc, Nullable<double> productPrice, string productUnit, string productIngredient, string productSeason, string createBy)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("productCode", productCode) :
                new ObjectParameter("productCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var productShortNameParameter = productShortName != null ?
                new ObjectParameter("productShortName", productShortName) :
                new ObjectParameter("productShortName", typeof(string));
    
            var productCategoryIdParameter = productCategoryId.HasValue ?
                new ObjectParameter("productCategoryId", productCategoryId) :
                new ObjectParameter("productCategoryId", typeof(int));
    
            var productImagesParameter = productImages != null ?
                new ObjectParameter("productImages", productImages) :
                new ObjectParameter("productImages", typeof(string));
    
            var productShortDescParameter = productShortDesc != null ?
                new ObjectParameter("productShortDesc", productShortDesc) :
                new ObjectParameter("productShortDesc", typeof(string));
    
            var productLongDescParameter = productLongDesc != null ?
                new ObjectParameter("productLongDesc", productLongDesc) :
                new ObjectParameter("productLongDesc", typeof(string));
    
            var productPriceParameter = productPrice.HasValue ?
                new ObjectParameter("productPrice", productPrice) :
                new ObjectParameter("productPrice", typeof(double));
    
            var productUnitParameter = productUnit != null ?
                new ObjectParameter("productUnit", productUnit) :
                new ObjectParameter("productUnit", typeof(string));
    
            var productIngredientParameter = productIngredient != null ?
                new ObjectParameter("productIngredient", productIngredient) :
                new ObjectParameter("productIngredient", typeof(string));
    
            var productSeasonParameter = productSeason != null ?
                new ObjectParameter("productSeason", productSeason) :
                new ObjectParameter("productSeason", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCT_CREATE", productCodeParameter, productNameParameter, productShortNameParameter, productCategoryIdParameter, productImagesParameter, productShortDescParameter, productLongDescParameter, productPriceParameter, productUnitParameter, productIngredientParameter, productSeasonParameter, createByParameter);
        }
    
        public virtual int SP_PRODUCT_DELETE(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCT_DELETE", productIDParameter);
        }
    
        public virtual ObjectResult<SP_PRODUCT_GETBYID_Result> SP_PRODUCT_GETBYID(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRODUCT_GETBYID_Result>("SP_PRODUCT_GETBYID", productIDParameter);
        }
    
        public virtual ObjectResult<SP_PRODUCT_SEARCH_Result> SP_PRODUCT_SEARCH(string txtSearch, Nullable<int> startIndex, Nullable<int> count, ObjectParameter totalItems)
        {
            var txtSearchParameter = txtSearch != null ?
                new ObjectParameter("txtSearch", txtSearch) :
                new ObjectParameter("txtSearch", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("startIndex", startIndex) :
                new ObjectParameter("startIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRODUCT_SEARCH_Result>("SP_PRODUCT_SEARCH", txtSearchParameter, startIndexParameter, countParameter, totalItems);
        }
    
        public virtual int SP_PRODUCT_UPDATE(Nullable<int> productID, string productCode, string productName, string productShortName, Nullable<int> productCategoryId, string productImages, string productShortDesc, string productLongDesc, Nullable<double> productPrice, string productUnit, string productIngredient, string productSeason, Nullable<byte> isActive)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("productCode", productCode) :
                new ObjectParameter("productCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var productShortNameParameter = productShortName != null ?
                new ObjectParameter("productShortName", productShortName) :
                new ObjectParameter("productShortName", typeof(string));
    
            var productCategoryIdParameter = productCategoryId.HasValue ?
                new ObjectParameter("productCategoryId", productCategoryId) :
                new ObjectParameter("productCategoryId", typeof(int));
    
            var productImagesParameter = productImages != null ?
                new ObjectParameter("productImages", productImages) :
                new ObjectParameter("productImages", typeof(string));
    
            var productShortDescParameter = productShortDesc != null ?
                new ObjectParameter("productShortDesc", productShortDesc) :
                new ObjectParameter("productShortDesc", typeof(string));
    
            var productLongDescParameter = productLongDesc != null ?
                new ObjectParameter("productLongDesc", productLongDesc) :
                new ObjectParameter("productLongDesc", typeof(string));
    
            var productPriceParameter = productPrice.HasValue ?
                new ObjectParameter("productPrice", productPrice) :
                new ObjectParameter("productPrice", typeof(double));
    
            var productUnitParameter = productUnit != null ?
                new ObjectParameter("productUnit", productUnit) :
                new ObjectParameter("productUnit", typeof(string));
    
            var productIngredientParameter = productIngredient != null ?
                new ObjectParameter("productIngredient", productIngredient) :
                new ObjectParameter("productIngredient", typeof(string));
    
            var productSeasonParameter = productSeason != null ?
                new ObjectParameter("productSeason", productSeason) :
                new ObjectParameter("productSeason", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCT_UPDATE", productIDParameter, productCodeParameter, productNameParameter, productShortNameParameter, productCategoryIdParameter, productImagesParameter, productShortDescParameter, productLongDescParameter, productPriceParameter, productUnitParameter, productIngredientParameter, productSeasonParameter, isActiveParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SP_USER_CREATE(string userCode, string userEmail, string userPassword, string userFullName, string userPhone, string userAddress, Nullable<int> role)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            var userFullNameParameter = userFullName != null ?
                new ObjectParameter("userFullName", userFullName) :
                new ObjectParameter("userFullName", typeof(string));
    
            var userPhoneParameter = userPhone != null ?
                new ObjectParameter("userPhone", userPhone) :
                new ObjectParameter("userPhone", typeof(string));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("userAddress", userAddress) :
                new ObjectParameter("userAddress", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_USER_CREATE", userCodeParameter, userEmailParameter, userPasswordParameter, userFullNameParameter, userPhoneParameter, userAddressParameter, roleParameter);
        }
    
        public virtual ObjectResult<SP_USER_GETBYUSERCODE_Result> SP_USER_GETBYUSERCODE(string usercode)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_USER_GETBYUSERCODE_Result>("SP_USER_GETBYUSERCODE", usercodeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_USERCODE_IS_EXISTED(string usercode)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_USERCODE_IS_EXISTED", usercodeParameter);
        }
    
        public virtual ObjectResult<SP_CONSIGNMENT_GETALL_Result> SP_CONSIGNMENT_GETALL(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CONSIGNMENT_GETALL_Result>("SP_CONSIGNMENT_GETALL", productIdParameter);
        }
    
        public virtual int SP_CONSIGNMENT_DELETE(string bathNo)
        {
            var bathNoParameter = bathNo != null ?
                new ObjectParameter("bathNo", bathNo) :
                new ObjectParameter("bathNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CONSIGNMENT_DELETE", bathNoParameter);
        }
    
        public virtual int SP_NEWS_CREATE(Nullable<int> newsCateID, string newsTitle, string newsImages, string newsSummary, string newsBody, string createBy, string hashtags)
        {
            var newsCateIDParameter = newsCateID.HasValue ?
                new ObjectParameter("newsCateID", newsCateID) :
                new ObjectParameter("newsCateID", typeof(int));
    
            var newsTitleParameter = newsTitle != null ?
                new ObjectParameter("newsTitle", newsTitle) :
                new ObjectParameter("newsTitle", typeof(string));
    
            var newsImagesParameter = newsImages != null ?
                new ObjectParameter("newsImages", newsImages) :
                new ObjectParameter("newsImages", typeof(string));
    
            var newsSummaryParameter = newsSummary != null ?
                new ObjectParameter("newsSummary", newsSummary) :
                new ObjectParameter("newsSummary", typeof(string));
    
            var newsBodyParameter = newsBody != null ?
                new ObjectParameter("newsBody", newsBody) :
                new ObjectParameter("newsBody", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));
    
            var hashtagsParameter = hashtags != null ?
                new ObjectParameter("hashtags", hashtags) :
                new ObjectParameter("hashtags", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NEWS_CREATE", newsCateIDParameter, newsTitleParameter, newsImagesParameter, newsSummaryParameter, newsBodyParameter, createByParameter, hashtagsParameter);
        }
    
        public virtual int SP_NEWS_DELETE(Nullable<int> newsID)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("newsID", newsID) :
                new ObjectParameter("newsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NEWS_DELETE", newsIDParameter);
        }
    
        public virtual ObjectResult<SP_NEWS_GETBYID_Result> SP_NEWS_GETBYID(Nullable<int> newsID)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("newsID", newsID) :
                new ObjectParameter("newsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_NEWS_GETBYID_Result>("SP_NEWS_GETBYID", newsIDParameter);
        }
    
        public virtual ObjectResult<SP_NEWS_GETTOP3_Result> SP_NEWS_GETTOP3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_NEWS_GETTOP3_Result>("SP_NEWS_GETTOP3");
        }
    
        public virtual ObjectResult<SP_NEWS_SEARCH_Result> SP_NEWS_SEARCH(string txtSearch, Nullable<int> startIndex, Nullable<int> count, ObjectParameter totalItems)
        {
            var txtSearchParameter = txtSearch != null ?
                new ObjectParameter("txtSearch", txtSearch) :
                new ObjectParameter("txtSearch", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("startIndex", startIndex) :
                new ObjectParameter("startIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_NEWS_SEARCH_Result>("SP_NEWS_SEARCH", txtSearchParameter, startIndexParameter, countParameter, totalItems);
        }
    
        public virtual ObjectResult<SP_NEWS_SEARCHACTIVE_Result> SP_NEWS_SEARCHACTIVE(string txtSearch, Nullable<int> startIndex, Nullable<int> count, ObjectParameter totalItems)
        {
            var txtSearchParameter = txtSearch != null ?
                new ObjectParameter("txtSearch", txtSearch) :
                new ObjectParameter("txtSearch", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("startIndex", startIndex) :
                new ObjectParameter("startIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_NEWS_SEARCHACTIVE_Result>("SP_NEWS_SEARCHACTIVE", txtSearchParameter, startIndexParameter, countParameter, totalItems);
        }
    
        public virtual int SP_NEWS_UPDATE(Nullable<int> newsID, Nullable<int> newsCateID, string newsTitle, string newsImages, string newsSummary, string newsBody, string createBy, string hashtags, Nullable<byte> isActive)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("newsID", newsID) :
                new ObjectParameter("newsID", typeof(int));
    
            var newsCateIDParameter = newsCateID.HasValue ?
                new ObjectParameter("newsCateID", newsCateID) :
                new ObjectParameter("newsCateID", typeof(int));
    
            var newsTitleParameter = newsTitle != null ?
                new ObjectParameter("newsTitle", newsTitle) :
                new ObjectParameter("newsTitle", typeof(string));
    
            var newsImagesParameter = newsImages != null ?
                new ObjectParameter("newsImages", newsImages) :
                new ObjectParameter("newsImages", typeof(string));
    
            var newsSummaryParameter = newsSummary != null ?
                new ObjectParameter("newsSummary", newsSummary) :
                new ObjectParameter("newsSummary", typeof(string));
    
            var newsBodyParameter = newsBody != null ?
                new ObjectParameter("newsBody", newsBody) :
                new ObjectParameter("newsBody", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("createBy", createBy) :
                new ObjectParameter("createBy", typeof(string));
    
            var hashtagsParameter = hashtags != null ?
                new ObjectParameter("hashtags", hashtags) :
                new ObjectParameter("hashtags", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NEWS_UPDATE", newsIDParameter, newsCateIDParameter, newsTitleParameter, newsImagesParameter, newsSummaryParameter, newsBodyParameter, createByParameter, hashtagsParameter, isActiveParameter);
        }
    
        public virtual int SP_NEWSCATEGORY_CREATE(string newsCateTitle, string newsDesc)
        {
            var newsCateTitleParameter = newsCateTitle != null ?
                new ObjectParameter("newsCateTitle", newsCateTitle) :
                new ObjectParameter("newsCateTitle", typeof(string));
    
            var newsDescParameter = newsDesc != null ?
                new ObjectParameter("newsDesc", newsDesc) :
                new ObjectParameter("newsDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NEWSCATEGORY_CREATE", newsCateTitleParameter, newsDescParameter);
        }
    
        public virtual int SP_NEWSCATEGORY_DELETE(Nullable<int> newsCateID)
        {
            var newsCateIDParameter = newsCateID.HasValue ?
                new ObjectParameter("newsCateID", newsCateID) :
                new ObjectParameter("newsCateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NEWSCATEGORY_DELETE", newsCateIDParameter);
        }
    
        public virtual ObjectResult<SP_NEWSCATEGORY_GETALLACTIVE_Result> SP_NEWSCATEGORY_GETALLACTIVE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_NEWSCATEGORY_GETALLACTIVE_Result>("SP_NEWSCATEGORY_GETALLACTIVE");
        }
    
        public virtual ObjectResult<SP_NEWSCATEGORY_GETBYID_Result> SP_NEWSCATEGORY_GETBYID(Nullable<int> newsCateID)
        {
            var newsCateIDParameter = newsCateID.HasValue ?
                new ObjectParameter("newsCateID", newsCateID) :
                new ObjectParameter("newsCateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_NEWSCATEGORY_GETBYID_Result>("SP_NEWSCATEGORY_GETBYID", newsCateIDParameter);
        }
    
        public virtual ObjectResult<SP_NEWSCATEGORY_SEARCH_Result> SP_NEWSCATEGORY_SEARCH(string txtSearch, Nullable<int> startIndex, Nullable<int> count, ObjectParameter totalItems)
        {
            var txtSearchParameter = txtSearch != null ?
                new ObjectParameter("txtSearch", txtSearch) :
                new ObjectParameter("txtSearch", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("startIndex", startIndex) :
                new ObjectParameter("startIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_NEWSCATEGORY_SEARCH_Result>("SP_NEWSCATEGORY_SEARCH", txtSearchParameter, startIndexParameter, countParameter, totalItems);
        }
    
        public virtual int SP_NEWSCATEGORY_UPDATE(Nullable<int> newsCateID, string newsCateTitle, string newsDesc, Nullable<byte> isActive)
        {
            var newsCateIDParameter = newsCateID.HasValue ?
                new ObjectParameter("newsCateID", newsCateID) :
                new ObjectParameter("newsCateID", typeof(int));
    
            var newsCateTitleParameter = newsCateTitle != null ?
                new ObjectParameter("newsCateTitle", newsCateTitle) :
                new ObjectParameter("newsCateTitle", typeof(string));
    
            var newsDescParameter = newsDesc != null ?
                new ObjectParameter("newsDesc", newsDesc) :
                new ObjectParameter("newsDesc", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NEWSCATEGORY_UPDATE", newsCateIDParameter, newsCateTitleParameter, newsDescParameter, isActiveParameter);
        }
    }
}
